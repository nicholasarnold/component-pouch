{"version":3,"sources":["images/add-button.svg","images/minus-button.svg","components/Logo/Logo.js","components/Header/Header.js","util/SRD.js","components/SpellSearchBar/SpellSearchBar.js","components/Disclaimer/Disclaimer.js","components/SpellSuggestions/SpellSuggestions.js","components/SpellResults/SpellResults.js","components/Main/Main.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","react_default","a","createElement","className","Header","Logo_Logo","SRD","endpoint","fetchAllSpells","_this","this","fetch","then","response","json","jsonResponse","results","map","spell","id","getSpellId","url","name","fetchSpell","spellId","concat","index","toString","material","split","pop","SpellSearchBar","_React$Component","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleOnChange","event","searchTerm","target","value","setState","search","filterSpellSuggestions","state","inherits","createClass","key","type","onChange","placeholder","React","Component","Disclaimer","href","rel","SpellSuggestions","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","handleClick","addToSelected","_this2","notification","status","role","spells","onClick","src","addButton","width","height","alt","SpellResults","handleOnClick","getAttribute","spellName","removeFromSelected","ifEmpty","noComponents","removeButton","spellid","spellname","Main","getAllSpells","spellsAvailable","spellsSuggested","catch","error","filteredSpellSuggestions","filter","caseInsensitiveSearch","toUpperCase","includes","removeFromAvailable","removeFromSuggestions","newSelectedSpell","spellsSelected","push","removedSpellArray","addToSpellsAvailable","addToSpellsSuggested","ascending","b","sort","SpellSearchBar_SpellSearchBar_SpellSearchBar","Disclaimer_Disclaimer","SpellSuggestions_SpellSuggestions_SpellSuggestions","SpellResults_SpellResults_SpellResults","addToFullList","addToSuggestions","Footer","App","Header_Header","Main_Main_Main","Footer_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+SCE3BC,EAAO,WAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,mBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,kLCJKC,EAAS,WACpB,OACEJ,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACG,EAAD,SCPKC,SAAM,CACjBC,SAAU,qEAGVC,eAJiB,WAIA,IAAAC,EAAAC,KACf,OAAOC,MAAMD,KAAKH,UACjBK,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJ,OAAOA,EAAaC,QAAQC,IAAI,SAAAC,GAG9B,MAAO,CACLC,GAHcV,EAAKW,WAAWF,EAAMG,KAIpCC,KAHgBJ,EAAMI,WAU9BC,WApBiB,SAoBNC,GACT,OAAOb,MAAK,GAAAc,OAAIf,KAAKH,UAATkB,OAAoBD,IAC/BZ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GACJ,MAAO,CACLM,GAAIN,EAASa,MAAMC,WACnBL,KAAMT,EAASS,KACfM,SAAUf,EAASe,aAMzBR,WAjCiB,SAiCNC,GAET,OADeA,EAAIQ,MAAM,KACXC,SChCLC,SAAb,SAAAC,GACE,SAAAD,EAAYE,GAAO,IAAAxB,EAAA,OAAAyB,OAAAC,EAAA,EAAAD,CAAAxB,KAAAqB,IACjBtB,EAAAyB,OAAAE,EAAA,EAAAF,CAAAxB,KAAAwB,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAA5B,KAAMuB,KAIRM,eAAiB,SAAAC,GACf,IAAMC,EAAaD,EAAME,OAAOC,MAChClC,EAAKmC,SAAS,CAAEC,OAAQJ,IACxBhC,EAAKwB,MAAMa,uBAAuBL,IANlChC,EAAKsC,MAAQ,CAAEF,OAAQ,IAFNpC,EADrB,OAAAyB,OAAAc,EAAA,EAAAd,CAAAH,EAAAC,GAAAE,OAAAe,EAAA,EAAAf,CAAAH,EAAA,EAAAmB,IAAA,SAAAP,MAAA,WAaI,OACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SACEC,UAAU,kBACVgD,KAAK,OACLR,MAAOjC,KAAKqC,MAAMF,OAClBO,SAAU1C,KAAK6B,eACfc,YAAY,0DArBxBtB,EAAA,CAAoCuB,IAAMC,YCD7BC,EAAa,WACxB,OACExD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,0EAAiEF,EAAAC,EAAAC,cAAA,KAAGuD,KAAK,0EAA0Ef,OAAO,SAASgB,IAAI,uBAAtG,6BAAjE,iDCFKC,EAAb,SAAA3B,GAAA,SAAA2B,IAAA,IAAAC,EAAAnD,EAAAyB,OAAAC,EAAA,EAAAD,CAAAxB,KAAAiD,GAAA,QAAAE,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAzD,EAAAyB,OAAAE,EAAA,EAAAF,CAAAxB,MAAAkD,EAAA1B,OAAAG,EAAA,EAAAH,CAAAyB,IAAArB,KAAA6B,MAAAP,EAAA,CAAAlD,MAAAe,OAAAuC,MACEI,YAAc,SAAA5B,GAAK,OAAI/B,EAAKwB,MAAMoC,cAAc7B,EAAME,OAAOC,QAD/DlC,EAAA,OAAAyB,OAAAc,EAAA,EAAAd,CAAAyB,EAAA3B,GAAAE,OAAAe,EAAA,EAAAf,CAAAyB,EAAA,EAAAT,IAAA,SAAAP,MAAA,WAGW,IAAA2B,EAAA5D,KACH6D,EAAe,GAoBnB,MAnB0B,YAAtB7D,KAAKuB,MAAMuC,OACbD,EACEvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBsE,KAAK,SAAxC,2BAG6B,UAAtB/D,KAAKuB,MAAMuC,OACpBD,EACEvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBsE,KAAK,SAAzC,wDACyDzE,EAAAC,EAAAC,cAAA,WACrDF,EAAAC,EAAAC,cAAA,8DAEIQ,KAAKuB,MAAMyC,OAAOX,SAC5BQ,EACEvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBsE,KAAK,SAAvC,mDACoDzE,EAAAC,EAAAC,cAAA,WAChDF,EAAAC,EAAAC,cAAA,4CAKNF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZoE,EACA7D,KAAKuB,MAAMyC,OAAOzD,IAAI,SAACC,EAAOQ,GAC7B,OACE1B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuB+C,IAAKxB,EAAQ,EAAGiB,MAAOzB,EAAMC,GAAIwD,QAASL,EAAKF,aACtFpE,EAAAC,EAAAC,cAAA,OACEC,UAAU,iBACVyE,IAAKC,IACLC,MAAM,KACNC,OAAO,KACPC,IAAI,iCANR,IAOM9D,EAAMI,cArC1BqC,EAAA,CAAsCL,IAAMC,mCCA/B0B,EAAb,SAAAjD,GAAA,SAAAiD,IAAA,IAAArB,EAAAnD,EAAAyB,OAAAC,EAAA,EAAAD,CAAAxB,KAAAuE,GAAA,QAAApB,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAzD,EAAAyB,OAAAE,EAAA,EAAAF,CAAAxB,MAAAkD,EAAA1B,OAAAG,EAAA,EAAAH,CAAA+C,IAAA3C,KAAA6B,MAAAP,EAAA,CAAAlD,MAAAe,OAAAuC,MACEkB,cAAgB,SAAA1C,GACd,IAAMhB,EAAUgB,EAAME,OAAOyC,aAAa,WACpCC,EAAY5C,EAAME,OAAOyC,aAAa,aAC5C1E,EAAKwB,MAAMoD,mBAAmB7D,EAAS4D,IAJ3C3E,EAAA,OAAAyB,OAAAc,EAAA,EAAAd,CAAA+C,EAAAjD,GAAAE,OAAAe,EAAA,EAAAf,CAAA+C,EAAA,EAAA/B,IAAA,SAAAP,MAAA,WAOW,IAAA2B,EAAA5D,KACH4E,EAAY5E,KAAKuB,MAAMyC,OAAOX,OAAyD,GAA/C/D,EAAAC,EAAAC,cAAA,8CAGtCqF,EACJvF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,qDAIF,OACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,wBACCmF,EACA5E,KAAKuB,MAAMyC,OAAOzD,IAAI,SAACC,EAAOQ,GAC7B,OACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAA8B+C,IAAKxB,GAChD1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,oBACVyE,IAAKY,IACLV,MAAM,KACNC,OAAO,KACPC,IAAI,oCACJS,QAASvE,EAAMC,GAAGQ,WAClB+D,UAAWxE,EAAMI,KACjBqD,QAASL,EAAKY,gBATlB,IAUMhE,EAAMI,MAEZtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAIgB,EAAMU,SAAWV,EAAMU,SAAW2D,aArCxDN,EAAA,CAAkC3B,IAAMC,WCI3BoC,EAAb,SAAA3D,GACE,SAAA2D,EAAY1D,GAAO,IAAAxB,EAAA,OAAAyB,OAAAC,EAAA,EAAAD,CAAAxB,KAAAiF,IACjBlF,EAAAyB,OAAAE,EAAA,EAAAF,CAAAxB,KAAAwB,OAAAG,EAAA,EAAAH,CAAAyD,GAAArD,KAAA5B,KAAMuB,KAcR2D,aAAe,WACbtF,EAAIE,iBACHI,KAAK,SAAA8D,GACJjE,EAAKmC,SAAS,CACZiD,gBAAiBnB,EACjBoB,gBAAiBpB,EACjBF,OAAQ,WAETuB,MAAM,SAAAC,GACPvF,EAAKmC,SAAS,CAAE4B,OAAQ,aAxBT/D,EA6BnBqC,uBAAyB,SAAAD,GACvB,IAAMoD,EAA2BxF,EAAKsC,MAAM8C,gBAAgBK,OAAO,SAAAhF,GACjE,IAAMiF,EAAwBtD,EAAOuD,cAErC,OAD6BlF,EAAMI,KAAK8E,cACZC,SAASF,KAEvC1F,EAAKmC,SAAS,CAAEkD,gBAAiBG,KAnChBxF,EAyCnB4D,cAAgB,SAAA7C,GACdf,EAAK6F,oBAAoB9E,GACzBf,EAAK8F,sBAAsB/E,GAC3BlB,EAAIiB,WAAWC,GACdZ,KAAK,SAAA4F,GACJ,IAAMC,EAAiBhG,EAAKsC,MAAM0D,eAClCA,EAAeC,KAAKF,GACpB/F,EAAKmC,SAAS,CAAE6D,eAAgBA,OAhDjBhG,EAuDnB4E,mBAAqB,SAAC7D,EAAS4D,GAC7B,IAAMuB,EAAoBlG,EAAKsC,MAAM0D,eAAeP,OAAO,SAAAhF,GAAK,OAAIA,EAAMC,KAAOK,IACjFf,EAAKmC,SAAS,CAAE6D,eAAgBE,IAChClG,EAAKmG,qBAAqBpF,EAAS4D,GACnC3E,EAAKoG,qBAAqBrF,EAAS4D,IA3DlB3E,EAmEnBqG,UAAY,SAAC7G,EAAG8G,GAAJ,OAAU9G,EAAEkB,GAAK4F,EAAE5F,IAnEZV,EAqEnB6F,oBAAsB,SAAA9E,GACpB,IAAMmF,EAAoBlG,EAAKsC,MAAM8C,gBAAgBK,OAAO,SAAAhF,GAAK,OAAIA,EAAMC,KAAOK,IAClFf,EAAKmC,SAAS,CAAEiD,gBAAiBc,KAvEhBlG,EA0EnB8F,sBAAwB,SAAA/E,GACtB,IAAMmF,EAAoBlG,EAAKsC,MAAM+C,gBAAgBI,OAAO,SAAAhF,GAAK,OAAIA,EAAMC,KAAOK,IAClFf,EAAKmC,SAAS,CAAEkD,gBAAiBa,KA5EhBlG,EA+EnBmG,qBAAuB,SAACpF,EAAS4D,GAC/B,IAAMS,EAAkBpF,EAAKsC,MAAM8C,gBAC7B3E,EAAQ,CACZC,GAAIK,EACJF,KAAM8D,GAERS,EAAgBa,KAAKxF,GACrB2E,EAAgBmB,KAAKvG,EAAKqG,WAC1BrG,EAAKmC,SAAS,CAAEiD,gBAAiBA,KAvFhBpF,EA0FnBoG,qBAAuB,SAACrF,EAAS4D,GAC/B,IAAMU,EAAkBrF,EAAKsC,MAAM+C,gBAC7B5E,EAAQ,CACZC,GAAIK,EACJF,KAAM8D,GAERU,EAAgBY,KAAKxF,GACrB4E,EAAgBkB,KAAKvG,EAAKqG,WAC1BrG,EAAKmC,SAAS,CAAEkD,gBAAiBA,KAhGjCrF,EAAKsC,MAAQ,CACX8C,gBAAiB,GACjBC,gBAAiB,GACjBW,eAAgB,GAChBjC,OAAQ,WANO/D,EADrB,OAAAyB,OAAAc,EAAA,EAAAd,CAAAyD,EAAA3D,GAAAE,OAAAe,EAAA,EAAAf,CAAAyD,EAAA,EAAAzC,IAAA,oBAAAP,MAAA,WA2GIjC,KAAKkF,iBA3GT,CAAA1C,IAAA,SAAAP,MAAA,WA+GI,OACE3C,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAC+G,EAAD,CAAgBnE,uBAAwBpC,KAAKoC,yBAC7C9C,EAAAC,EAAAC,cAACgH,EAAD,MACAlH,EAAAC,EAAAC,cAACiH,EAAD,CACEzC,OAAQhE,KAAKqC,MAAM+C,gBACnBtB,OAAQ9D,KAAKqC,MAAMyB,OACnBH,cAAe3D,KAAK2D,gBAEtBrE,EAAAC,EAAAC,cAACkH,EAAD,CACE1C,OAAQhE,KAAKqC,MAAM0D,eACnBpB,mBAAoB3E,KAAK2E,mBACzBgC,cAAe3G,KAAK2G,cACpBC,iBAAkB5G,KAAK4G,yBA7HnC3B,EAAA,CAA0BrC,IAAMC,WCLnBgE,SAAS,WACpB,OACEvH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,gCAAyBF,EAAAC,EAAAC,cAAA,KAAGuD,KAAK,oCAAoCf,OAAO,SAASgB,IAAI,uBAAhE,qBAE3B1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,KAAGuD,KAAK,WAAR,cCKT+D,mLAVX,OACExH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuH,EAAD,MACAzH,EAAAC,EAAAC,cAACwH,EAAD,MACA1H,EAAAC,EAAAC,cAACyH,EAAD,cANUpE,aCOEqE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlI,EAAAC,EAAAC,cAACiI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5H,KAAK,SAAA6H,GACjCA,EAAaC","file":"static/js/main.dd20c577.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add-button.e93377be.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus-button.0eac654a.svg\";","import React from 'react';\n\nexport const Logo = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <h1 className=\"display-2\">Component Pouch</h1>\n        <h6 className=\"font-italic\">A component pouch is a small, watertight leather belt pouch that has compartments to hold all the material components and other special items you need to cast your spells.</h6>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { Logo } from '../Logo/Logo';\n\nexport const Header = () => {\n  return (\n    <header>\n      <div className=\"header container\">\n        <Logo />\n      </div>\n    </header>\n  )\n}","export const SRD = {\n  endpoint: 'https://cors-anywhere.herokuapp.com/http://dnd5eapi.co/api/spells/',\n  \n  // Return all spells in the SRD with name and id\n  fetchAllSpells() {\n    return fetch(this.endpoint)\n    .then(response => response.json())\n    .then(jsonResponse => {\n      return jsonResponse.results.map(spell => {\n        const spellId = this.getSpellId(spell.url);\n        const spellName = spell.name;\n        return {\n          id: spellId,\n          name: spellName\n        }\n      })\n    })\n  },\n\n  // Return one spell with name, id, and material components\n  fetchSpell(spellId) {\n    return fetch(`${this.endpoint}${spellId}`)\n    .then(response => response.json())\n    .then(response => {\n      return {\n        id: response.index.toString(),\n        name: response.name,\n        material: response.material\n      }\n    })\n  },\n\n  // Return spellId from URL\n  getSpellId(url) {\n    const urlArr = url.split('/');\n    return urlArr.pop();\n  }\n}","import React from 'react';\nimport './SpellSearchBar.css';\n\nexport class SpellSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { search: '' }\n  }\n\n  handleOnChange = event => {\n    const searchTerm = event.target.value;\n    this.setState({ search: searchTerm });\n    this.props.filterSpellSuggestions(searchTerm);\n  }\n\n  render() {\n    return (\n      <div className=\"spell-searchbar row\">\n        <div className=\"col\">\n          <input\n            className=\"spell-searchbar\"\n            type=\"text\"\n            value={this.state.search}\n            onChange={this.handleOnChange}\n            placeholder=\"Enter the name of a spell (e.g., Magic Missile)\"\n          />\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport const Disclaimer = () => {\n  return (\n    <div className=\"disclaimer row\">\n      <div className=\"col\">\n        <p>Can't find the spell you're looking for? Only spells from the <a href=\"http://dnd.wizards.com/articles/features/systems-reference-document-srd\" target=\"_blank\" rel=\"noopener noreferrer\">System Reference Document</a> are listed below.</p>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport './SpellSuggestions.css';\nimport addButton from '../../images/add-button.svg';\n\nexport class SpellSuggestions extends React.Component {  \n  handleClick = event => this.props.addToSelected(event.target.value);\n\n  render() {\n    let notification = '';\n    if (this.props.status === 'loading') {\n      notification =\n        <div className=\"alert alert-light\" role=\"alert\">\n          Summoning spellbook ...\n        </div>;\n    } else if (this.props.status === 'error') {\n      notification = \n        <div className=\"alert alert-danger\" role=\"alert\">\n            The internet demons have counterspelled your summons!<br />\n            <small>(Something went wrong with the API request.)</small>\n        </div>;\n    } else if (!this.props.spells.length) {\n      notification =\n        <div className=\"alert alert-dark\" role=\"alert\">\n            No spells matched your query; broaden your mind!<br />\n            <small>(Or check your spelling.)</small>\n        </div>;\n    }\n\n    return (\n      <div className=\"spell-suggestions row\">\n        <div className=\"col btn-toolbar\">\n          {notification}\n          {this.props.spells.map((spell, index) => {\n            return ( \n              <button className=\"btn btn-light btn-sm\" key={index + 1} value={spell.id} onClick={this.handleClick}>\n                <img\n                  className=\"add-spell-icon\"\n                  src={addButton}\n                  width=\"16\"\n                  height=\"16\"\n                  alt=\"Add Spell to Component Pouch\"\n                /> {spell.name}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './SpellResults.css';\nimport removeButton from '../../images/minus-button.svg';\n\nexport class SpellResults extends React.Component {\n  handleOnClick = event => {\n    const spellId = event.target.getAttribute('spellid');\n    const spellName = event.target.getAttribute('spellname');\n    this.props.removeFromSelected(spellId, spellName);\n  }\n\n  render() {\n    let ifEmpty = (!this.props.spells.length) ? <small>YOUR COMPONENT POUCH IS EMPTY</small> : '';\n    // Future development: let removeAllButton = (this.props.spells.length) ? <a href=\"#\" className=\"badge badge-light\">Remove All</a> : '';\n\n    const noComponents =\n      <span className=\"no-components\">\n        This spell does not need any material components.\n      </span>\n\n    return (\n      <div className=\"spell-results row\">\n        <div className=\"col\">\n          <h4 className=\"text-uppercase\">Your Component Pouch</h4>\n          {ifEmpty}\n          {this.props.spells.map((spell, index) => {\n            return (\n              <div className=\"spell-components-result row\" key={index}>\n                <div className=\"col-3\">\n                  <img\n                    className=\"remove-spell-icon\"\n                    src={removeButton}\n                    width=\"16\"\n                    height=\"16\"\n                    alt=\"Remove Spell from Component Pouch\"\n                    spellid={spell.id.toString()}\n                    spellname={spell.name}\n                    onClick={this.handleOnClick}\n                  /> {spell.name}\n                </div>\n                <div className=\"col-9\">\n                  <p>{spell.material ? spell.material : noComponents}</p>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './Main.css';\nimport { SRD } from '../../util/SRD';\nimport { SpellSearchBar } from '../SpellSearchBar/SpellSearchBar';\nimport { Disclaimer } from '../Disclaimer/Disclaimer';\nimport { SpellSuggestions } from '../SpellSuggestions/SpellSuggestions';\nimport { SpellResults } from '../SpellResults/SpellResults';\n\nexport class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      spellsAvailable: [],\n      spellsSuggested: [],\n      spellsSelected: [],\n      status: 'loading'\n    };\n  }\n\n  /*----------------------------------------*/\n  //             EVENT FUNCTIONS            //\n  /*----------------------------------------*/\n\n  // When user first loads the page, retrieve a list of spells\n  getAllSpells = () => {\n    SRD.fetchAllSpells()\n    .then(spells => {\n      this.setState({ \n        spellsAvailable: spells,\n        spellsSuggested: spells,\n        status: 'done'\n      });\n    }).catch(error => {\n      this.setState({ status: 'error' });\n    })\n  }\n\n  // When user enters text in the search bar, filter spells\n  filterSpellSuggestions = search => {\n    const filteredSpellSuggestions = this.state.spellsAvailable.filter(spell => {\n      const caseInsensitiveSearch = search.toUpperCase();\n      const caseInsensitiveSpell = spell.name.toUpperCase();\n      return caseInsensitiveSpell.includes(caseInsensitiveSearch);\n    });\n    this.setState({ spellsSuggested: filteredSpellSuggestions });\n  }\n\n  // When user clicks on a suggested spell:\n  // 1. Remove from spellsAvailable and spellsSuggested\n  // 2. Make API request, add to spellsSelected\n  addToSelected = spellId => {\n    this.removeFromAvailable(spellId);\n    this.removeFromSuggestions(spellId);\n    SRD.fetchSpell(spellId)\n    .then(newSelectedSpell => {\n      const spellsSelected = this.state.spellsSelected;\n      spellsSelected.push(newSelectedSpell);\n      this.setState({ spellsSelected: spellsSelected });\n    });\n  }\n\n  // When user clicks to remove spell:\n  // 1. Remove from spellsSelected\n  // 2. Add back to spellsAvailable and spellsSuggested\n  removeFromSelected = (spellId, spellName) => {\n    const removedSpellArray = this.state.spellsSelected.filter(spell => spell.id !== spellId);\n    this.setState({ spellsSelected: removedSpellArray });\n    this.addToSpellsAvailable(spellId, spellName);\n    this.addToSpellsSuggested(spellId, spellName);\n  }\n\n  /*----------------------------------------*/\n  //    STATE SETTERS & HELPER FUNCTIONS    //\n  /*----------------------------------------*/\n\n  // Sort spell objects ascending by id\n  ascending = (a, b) => a.id - b.id;\n\n  removeFromAvailable = spellId => {\n    const removedSpellArray = this.state.spellsAvailable.filter(spell => spell.id !== spellId);\n    this.setState({ spellsAvailable: removedSpellArray });\n  }\n\n  removeFromSuggestions = spellId => {\n    const removedSpellArray = this.state.spellsSuggested.filter(spell => spell.id !== spellId);\n    this.setState({ spellsSuggested: removedSpellArray });\n  }\n\n  addToSpellsAvailable = (spellId, spellName) => {\n    const spellsAvailable = this.state.spellsAvailable;\n    const spell = {\n      id: spellId,\n      name: spellName\n    }\n    spellsAvailable.push(spell);\n    spellsAvailable.sort(this.ascending);\n    this.setState({ spellsAvailable: spellsAvailable });\n  }\n\n  addToSpellsSuggested = (spellId, spellName) => {\n    const spellsSuggested = this.state.spellsSuggested;\n    const spell = {\n      id: spellId,\n      name: spellName\n    }\n    spellsSuggested.push(spell);\n    spellsSuggested.sort(this.ascending);\n    this.setState({ spellsSuggested: spellsSuggested });\n  }\n\n  /*----------------------------------------*/\n  //           LIFECYCLE FUNCTIONS          //\n  /*----------------------------------------*/\n\n  componentDidMount() {\n    this.getAllSpells();\n  }\n\n  render() {\n    return (\n      <main>\n        <div className=\"main container\">\n          <SpellSearchBar filterSpellSuggestions={this.filterSpellSuggestions} />\n          <Disclaimer />\n          <SpellSuggestions\n            spells={this.state.spellsSuggested}\n            status={this.state.status}\n            addToSelected={this.addToSelected}\n          />\n          <SpellResults\n            spells={this.state.spellsSelected}\n            removeFromSelected={this.removeFromSelected}\n            addToFullList={this.addToFullList}\n            addToSuggestions={this.addToSuggestions}\n          />\n        </div>\n      </main>\n    )\n  }\n}","import React from 'react';\nimport './Footer.css';\n\nexport const Footer = () => {\n  return (\n    <footer>\n      <div className=\"footer container\">\n        <div className=\"row\">\n          <div className=\"col text-muted\">\n            <p>Copyright &copy; 2019 <a href=\"https://github.com/nicholasarnold\" target=\"_blank\" rel=\"noopener noreferrer\">Nicholas Arnold</a></p>\n          </div>\n          <div className=\"col\">\n            <p>License: <a href=\"/legal/\">MIT</a></p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n}","import React, { Component } from 'react';\nimport { Header } from './components/Header/Header';\nimport { Main } from './components/Main/Main';\nimport { Footer } from './components/Footer/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}